name: Backups Cron

on:
  schedule:
    - cron: '0 2 * * *' # Adjust the cron timing as necessary

jobs:
  backup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install PostgreSQL client
        run: sudo apt-get install -y postgresql-client

      - name: Create backup directories
        run: |
          mkdir -p $HOME/backups
          mkdir -p $HOME/backups/logs

      - name: Database backup
        env:
          PGPASSWORD: ${{ secrets.DB_PASSWORD }} # Use GitHub Secrets for sensitive data
        run: |
          pg_dump -h ${{ secrets.DB_HOST }} -U ${{ secrets.DB_USER }} -F c -b -v -f "$HOME/backups/db_backup_$(date +'%Y%m%d_%H%M%S').dump" ${{ secrets.DB_NAME }}

      - name: Compress backup
        run: |
          gzip "$HOME/backups/db_backup_*.dump"

      - name: Validate backup
        run: |
          if [ ! -f "$HOME/backups/db_backup_*.dump.gz" ]; then
            echo "Backup file not found!"
            exit 1
          fi

      - name: Upload backup as artifact
        uses: actions/upload-artifact@v2
        with:
          name: database-backup
          path: $HOME/backups/*.dump.gz

  notify-failure:
    runs-on: ubuntu-latest
    if: failure()

    steps:
      - name: Notify failure
        uses: peter-evans/create-issue@v2
        with:
          title: Backup Job Failure
          body: The backup job has failed. Please check the logs for more details.
          labels: backup, failure
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Ensure the token has permissions to write issues
