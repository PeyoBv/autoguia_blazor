using AutoGuia.Core.Entities;
using AutoGuia.Web.Data;
using Microsoft.EntityFrameworkCore;

namespace AutoGuia.Web.Data;

/// <summary>
/// Seeder de datos iniciales para planes de suscripci√≥n
/// </summary>
public static class PlanesSeeder
{
    /// <summary>
    /// Pobla la base de datos con los planes iniciales de AutoGu√≠a
    /// </summary>
    public static async Task SeedPlanesAsync(ApplicationDbContext context)
    {
        // Verificar si ya existen planes
        if (await context.Planes.AnyAsync())
        {
            Console.WriteLine("‚ÑπÔ∏è Los planes ya est√°n poblados en la base de datos");
            return;
        }

        Console.WriteLine("üì¶ Poblando planes de suscripci√≥n...");

        var planes = new List<Plan>
        {
            // ‚úÖ Plan Gratuito
            new Plan
            {
                Nombre = "Gratis",
                Descripcion = "Plan b√°sico para usuarios casuales. Perfecto para comenzar a explorar AutoGu√≠a.",
                Precio = 0,
                Duracion = TipoDuracion.Mensual,
                LimiteDiagnosticos = 5, // 5 diagn√≥sticos con IA por mes
                LimiteBusquedas = 10, // 10 b√∫squedas de repuestos por d√≠a
                AccesoForo = true,
                AccesoMapas = true,
                SoportePrioritario = false,
                AccesoComparador = true,
                Caracteristicas = new[]
                {
                    "5 diagn√≥sticos con IA al mes",
                    "10 b√∫squedas de repuestos por d√≠a",
                    "Acceso al foro comunitario",
                    "Mapa de talleres",
                    "Comparador de precios b√°sico",
                    "Con publicidad"
                },
                Activo = true,
                Destacado = false,
                ColorBadge = "#9E9E9E", // Gris
                Orden = 3,
                FechaCreacion = DateTime.UtcNow
            },

            // üåü Plan Pro (Recomendado)
            new Plan
            {
                Nombre = "Pro",
                Descripcion = "Plan profesional para usuarios frecuentes. El m√°s popular entre mec√°nicos y entusiastas.",
                Precio = 5990, // $5.990 CLP/mes
                Duracion = TipoDuracion.Mensual,
                LimiteDiagnosticos = 50, // 50 diagn√≥sticos con IA por mes
                LimiteBusquedas = 0, // Ilimitado
                AccesoForo = true,
                AccesoMapas = true,
                SoportePrioritario = false,
                AccesoComparador = true,
                Caracteristicas = new[]
                {
                    "50 diagn√≥sticos con IA al mes",
                    "B√∫squedas ilimitadas",
                    "Sin publicidad",
                    "Acceso prioritario al foro",
                    "Comparador avanzado",
                    "Notificaciones push",
                    "Historial completo"
                },
                Activo = true,
                Destacado = true, // Plan destacado/recomendado
                ColorBadge = "#2196F3", // Azul
                Orden = 2,
                FechaCreacion = DateTime.UtcNow
            },

            // üíé Plan Premium
            new Plan
            {
                Nombre = "Premium",
                Descripcion = "Plan ilimitado para talleres mec√°nicos y profesionales del sector automotriz.",
                Precio = 9990, // $9.990 CLP/mes
                Duracion = TipoDuracion.Mensual,
                LimiteDiagnosticos = 0, // Ilimitado
                LimiteBusquedas = 0, // Ilimitado
                AccesoForo = true,
                AccesoMapas = true,
                SoportePrioritario = true,
                AccesoComparador = true,
                Caracteristicas = new[]
                {
                    "Diagn√≥sticos ilimitados con IA",
                    "B√∫squedas ilimitadas",
                    "Sin publicidad",
                    "Soporte prioritario 24/7",
                    "Comparador profesional",
                    "Estad√≠sticas avanzadas",
                    "API de integraci√≥n",
                    "Reportes personalizados",
                    "Prioridad en nuevas features"
                },
                Activo = true,
                Destacado = false,
                ColorBadge = "#FFD700", // Dorado
                Orden = 1,
                FechaCreacion = DateTime.UtcNow
            },

            // üìÖ Plan Pro Anual (Ahorro del 20%)
            new Plan
            {
                Nombre = "Pro Anual",
                Descripcion = "Plan profesional con pago anual. Ahorra un 20% comparado con el plan mensual.",
                Precio = 57500, // $57.500 CLP/a√±o (~$4.792/mes)
                Duracion = TipoDuracion.Anual,
                LimiteDiagnosticos = 50, // 50 diagn√≥sticos con IA por mes
                LimiteBusquedas = 0, // Ilimitado
                AccesoForo = true,
                AccesoMapas = true,
                SoportePrioritario = false,
                AccesoComparador = true,
                Caracteristicas = new[]
                {
                    "50 diagn√≥sticos con IA al mes",
                    "B√∫squedas ilimitadas",
                    "Sin publicidad",
                    "Acceso prioritario al foro",
                    "Comparador avanzado",
                    "Notificaciones push",
                    "Historial completo",
                    "üéÅ 20% de descuento (ahorra $14.380 al a√±o)"
                },
                Activo = true,
                Destacado = false,
                ColorBadge = "#2196F3", // Azul
                Orden = 4,
                FechaCreacion = DateTime.UtcNow
            },

            // üíé Plan Premium Anual (Ahorro del 25%)
            new Plan
            {
                Nombre = "Premium Anual",
                Descripcion = "Plan premium con pago anual. Ahorra un 25% y obt√©n acceso ilimitado durante todo el a√±o.",
                Precio = 89900, // $89.900 CLP/a√±o (~$7.492/mes)
                Duracion = TipoDuracion.Anual,
                LimiteDiagnosticos = 0, // Ilimitado
                LimiteBusquedas = 0, // Ilimitado
                AccesoForo = true,
                AccesoMapas = true,
                SoportePrioritario = true,
                AccesoComparador = true,
                Caracteristicas = new[]
                {
                    "Diagn√≥sticos ilimitados con IA",
                    "B√∫squedas ilimitadas",
                    "Sin publicidad",
                    "Soporte prioritario 24/7",
                    "Comparador profesional",
                    "Estad√≠sticas avanzadas",
                    "API de integraci√≥n",
                    "Reportes personalizados",
                    "Prioridad en nuevas features",
                    "üéÅ 25% de descuento (ahorra $29.980 al a√±o)"
                },
                Activo = true,
                Destacado = false,
                ColorBadge = "#FFD700", // Dorado
                Orden = 5,
                FechaCreacion = DateTime.UtcNow
            }
        };

        await context.Planes.AddRangeAsync(planes);
        await context.SaveChangesAsync();

        Console.WriteLine($"‚úÖ {planes.Count} planes de suscripci√≥n creados exitosamente:");
        foreach (var plan in planes.OrderBy(p => p.Orden))
        {
            Console.WriteLine($"   ‚Ä¢ {plan.Nombre} - {plan.PrecioFormateado}/{plan.DuracionTexto}");
        }
    }

    /// <summary>
    /// Crea una suscripci√≥n gratuita para un usuario nuevo
    /// </summary>
    public static async Task CrearSuscripcionGratuitaAsync(ApplicationDbContext context, string usuarioId)
    {
        // Verificar si el usuario ya tiene una suscripci√≥n activa
        var suscripcionExistente = await context.Suscripciones
            .FirstOrDefaultAsync(s => s.UsuarioId == usuarioId && s.Estado == EstadoSuscripcion.Activa);

        if (suscripcionExistente != null)
        {
            Console.WriteLine($"‚ÑπÔ∏è El usuario {usuarioId} ya tiene una suscripci√≥n activa");
            return;
        }

        // Obtener el plan gratuito
        var planGratuito = await context.Planes
            .FirstOrDefaultAsync(p => p.Nombre == "Gratis" && p.Activo);

        if (planGratuito == null)
        {
            Console.WriteLine("‚ö†Ô∏è No se encontr√≥ el plan gratuito");
            return;
        }

        // Crear suscripci√≥n gratuita (vigencia indefinida)
        var suscripcion = new Suscripcion
        {
            UsuarioId = usuarioId,
            PlanId = planGratuito.Id,
            FechaInicio = DateTime.UtcNow,
            FechaVencimiento = DateTime.UtcNow.AddYears(100), // Pr√°cticamente indefinida
            Estado = EstadoSuscripcion.Activa,
            MetodoPago = "Gratuito",
            MontoPagado = 0,
            RenovacionAutomatica = true,
            CreatedAt = DateTime.UtcNow,
            UpdatedAt = DateTime.UtcNow
        };

        await context.Suscripciones.AddAsync(suscripcion);
        await context.SaveChangesAsync();

        Console.WriteLine($"‚úÖ Suscripci√≥n gratuita creada para usuario {usuarioId}");
    }
}
