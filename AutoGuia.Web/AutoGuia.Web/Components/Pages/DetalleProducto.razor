@page "/producto/{ProductoId:int}"
@rendermode InteractiveServer
@inject IComparadorService ComparadorService
@inject NavigationManager Navigation
@using AutoGuia.Core.DTOs

<PageTitle>@(producto?.Nombre ?? "Producto") - AutoGuía</PageTitle>

<div class="container py-4">
    @if (cargando)
    {
        <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Cargando producto...</span>
            </div>
            <p class="mt-2">Cargando información del producto...</p>
        </div>
    }
    else if (producto == null)
    {
        <div class="row">
            <div class="col-12">
                <div class="alert alert-warning">
                    <h5>Producto no encontrado</h5>
                    <p class="mb-0">El producto que buscas no existe o no está disponible.</p>
                    <a href="/productos" class="btn btn-primary mt-2">
                        <i class="fas fa-arrow-left me-2"></i>Volver al Catálogo
                    </a>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Breadcrumb -->
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Inicio</a></li>
                <li class="breadcrumb-item"><a href="/productos">Productos</a></li>
                <li class="breadcrumb-item active">@producto.Nombre</li>
            </ol>
        </nav>

        <!-- Información del producto -->
        <div class="row mb-4">
            <div class="col-md-6">
                @if (!string.IsNullOrEmpty(producto.ImagenUrl))
                {
                    <img src="@producto.ImagenUrl" class="img-fluid rounded shadow" alt="@producto.Nombre" />
                }
                else
                {
                    <div class="bg-light rounded d-flex align-items-center justify-content-center shadow" style="height: 400px;">
                        <i class="fas fa-cog fa-4x text-muted"></i>
                    </div>
                }
            </div>
            <div class="col-md-6">
                <h1 class="h2">@producto.Nombre</h1>
                <p class="text-muted mb-3">Número de parte: <strong>@producto.NumeroDeParte</strong></p>
                
                @if (!string.IsNullOrEmpty(producto.Descripcion))
                {
                    <p class="lead">@producto.Descripcion</p>
                }

                <div class="card bg-light">
                    <div class="card-body">
                        <h6>Rango de Precios</h6>
                        <div class="d-flex align-items-center">
                            @if (producto.Ofertas?.Any() == true)
                            {
                                var precioMin = producto.Ofertas.Min(o => o.Precio);
                                var precioMax = producto.Ofertas.Max(o => o.Precio);
                                
                                <span class="h4 text-success mb-0">$@precioMin.ToString("N0")</span>
                                @if (precioMax > precioMin)
                                {
                                    <span class="ms-2 text-muted">- $@precioMax.ToString("N0")</span>
                                }
                                <small class="ms-3 text-muted">(@producto.Ofertas.Count() ofertas)</small>
                            }
                            else
                            {
                                <span class="text-muted">No disponible</span>
                            }
                        </div>
                    </div>
                </div>

                <!-- Compatibilidad -->
                @if (producto.VehiculosCompatibles?.Any() == true)
                {
                    <div class="mt-4">
                        <h6>Compatible con:</h6>
                        <div class="row">
                            @foreach (var vehiculo in producto.VehiculosCompatibles.Take(6))
                            {
                                <div class="col-md-6 mb-2">
                                    <small class="badge bg-secondary">
                                        @vehiculo.MarcaNombre @vehiculo.ModeloNombre 
                                        (@vehiculo.AnioInicioProduccion-@vehiculo.AnioFinProduccion)
                                    </small>
                                </div>
                            }
                            @if (producto.VehiculosCompatibles.Count() > 6)
                            {
                                <div class="col-12">
                                    <small class="text-muted">+ @(producto.VehiculosCompatibles.Count() - 6) modelos más...</small>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Ofertas disponibles -->
        @if (producto.Ofertas?.Any() == true)
        {
            <div class="row">
                <div class="col-12">
                    <h4 class="mb-3">
                        <i class="fas fa-store me-2"></i>
                        Ofertas Disponibles (@producto.Ofertas.Count())
                    </h4>
                </div>
            </div>

            <div class="row">
                @foreach (var oferta in producto.Ofertas.OrderBy(o => o.Precio))
                {
                    <div class="col-md-6 col-lg-4 mb-3">
                        <div class="card h-100 @(oferta == producto.Ofertas.OrderBy(o => o.Precio).First() ? "border-success" : "")">
                            @if (oferta == producto.Ofertas.OrderBy(o => o.Precio).First())
                            {
                                <div class="card-header bg-success text-white">
                                    <small class="fw-bold">
                                        <i class="fas fa-crown me-1"></i>
                                        Mejor Precio
                                    </small>
                                </div>
                            }
                            
                            <div class="card-body">
                                <div class="d-flex align-items-center mb-3">
                                    @if (!string.IsNullOrEmpty(oferta.TiendaLogo))
                                    {
                                        <img src="@oferta.TiendaLogo" alt="@oferta.TiendaNombre" 
                                             style="width: 40px; height: 40px; object-fit: contain;" class="me-3" />
                                    }
                                    <h6 class="mb-0">@oferta.TiendaNombre</h6>
                                </div>
                                
                                <div class="mb-3">
                                    <span class="h5 text-success">$@oferta.Precio.ToString("N0")</span>
                                </div>

                                <div class="mb-2">
                                    <span class="badge @(oferta.EsDisponible ? "bg-success" : "bg-warning")">
                                        @(oferta.EsDisponible ? "Disponible" : "Consultar disponibilidad")
                                    </span>
                                </div>
                                
                                <small class="text-muted">
                                    Actualizado: @oferta.FechaActualizacion.ToString("dd/MM/yyyy")
                                </small>
                            </div>
                            
                            <div class="card-footer">
                                @if (!string.IsNullOrEmpty(oferta.UrlProductoEnTienda))
                                {
                                    <a href="@oferta.UrlProductoEnTienda" target="_blank" class="btn btn-primary btn-sm w-100">
                                        <i class="fas fa-external-link-alt me-2"></i>Comprar en @oferta.TiendaNombre
                                    </a>
                                }
                                else
                                {
                                    <button class="btn btn-outline-secondary btn-sm w-100" disabled>
                                        <i class="fas fa-info-circle me-2"></i>Consultar en tienda
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="row">
                <div class="col-12">
                    <div class="alert alert-info">
                        <h6>No hay ofertas disponibles</h6>
                        <p class="mb-0">Este producto no tiene ofertas disponibles en este momento. Te recomendamos revisar más tarde.</p>
                    </div>
                </div>
            </div>
        }

        <!-- Productos relacionados -->
        <div class="row mt-5">
            <div class="col-12">
                <h5>
                    <i class="fas fa-lightbulb me-2"></i>
                    También te puede interesar
                </h5>
                <p class="text-muted">Explora más productos en nuestro catálogo</p>
                <a href="/productos" class="btn btn-outline-primary">
                    <i class="fas fa-search me-2"></i>Ver más productos
                </a>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public int ProductoId { get; set; }
    
    private ProductoDetalleDto? producto;
    private bool cargando = true;

    protected override async Task OnInitializedAsync()
    {
        await CargarProducto();
    }

    protected override async Task OnParametersSetAsync()
    {
        await CargarProducto();
    }

    private async Task CargarProducto()
    {
        if (ProductoId <= 0) return;
        
        cargando = true;
        StateHasChanged();

        try
        {
            producto = await ComparadorService.ObtenerProductoDetalleAsync(ProductoId);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error cargando producto: {ex.Message}");
            producto = null;
        }
        finally
        {
            cargando = false;
            StateHasChanged();
        }
    }
}