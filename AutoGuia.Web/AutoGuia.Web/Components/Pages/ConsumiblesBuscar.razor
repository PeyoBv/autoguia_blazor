@page "/consumibles"
@rendermode InteractiveServer
@inject AutoGuia.Infrastructure.Services.ICategoriaService CategoriaService
@inject AutoGuia.Infrastructure.Services.IComparadorService ComparadorService
@inject NavigationManager Navigation
@inject ILogger<ConsumiblesBuscar> Logger
@using AutoGuia.Core.DTOs
@using AutoGuia.Infrastructure.Services

<PageTitle>Comparador de Consumibles - AutoGuía</PageTitle>

<div class="container py-4">
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="h2 mb-3">
                <i class="fas fa-tire me-2 text-primary"></i>
                Comparador de Consumibles Automotrices
            </h1>
            <p class="lead text-muted">
                Busca y compara precios en tiempo real desde múltiples tiendas online
            </p>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title mb-4">
                        <i class="fas fa-search me-2"></i>Búsqueda de Consumibles
                    </h5>

                    <div class="row g-3">
                        <div class="col-md-6">
                            <label for="terminoBusqueda" class="form-label fw-bold">
                                <i class="fas fa-keyboard me-2"></i>Buscar producto
                            </label>
                            <div class="input-group input-group-lg">
                                <input type="text" 
                                       @bind="terminoBusqueda" 
                                       @bind:event="oninput"
                                       class="form-control" 
                                       id="terminoBusqueda" 
                                       placeholder="Ej: Aceite Castrol 10W-40"
                                       disabled="@estaBuscando">
                                <button type="button" 
                                        @onclick="OnBuscarTermino" 
                                        class="btn btn-success"
                                        disabled="@(string.IsNullOrWhiteSpace(terminoBusqueda) || estaBuscando)">
                                    <i class="fas fa-search me-2"></i>Buscar
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-12">
                            @if (!string.IsNullOrWhiteSpace(terminoBusqueda))
                            {
                                <button type="button" @onclick="LimpiarFiltros" class="btn btn-outline-secondary">
                                    <i class="fas fa-eraser me-2"></i>Limpiar
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (estaBuscando)
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="card border-primary">
                    <div class="card-body text-center py-5">
                        <div class="spinner-border text-primary mb-4" role="status" style="width: 4rem; height: 4rem;"></div>
                        <h4 class="mb-4"> Buscando consumibles en tiempo real...</h4>
                        <div class="row g-3">
                            <div class="col-md-4">
                                <div class="card bg-light">
                                    <div class="card-body">
                                        <div class="spinner-border spinner-border-sm text-warning mb-2"></div>
                                        <h6> MercadoLibre</h6>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card bg-light">
                                    <div class="card-body">
                                        <div class="spinner-border spinner-border-sm text-info mb-2"></div>
                                        <h6> Autoplanet</h6>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card bg-light">
                                    <div class="card-body">
                                        <div class="spinner-border spinner-border-sm text-success mb-2"></div>
                                        <h6> MundoRepuestos</h6>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (!estaBuscando && busquedaRealizada)
    {
        @if (tiempoBusquedaSegundos > 0)
        {
            <div class="alert alert-info">
                <strong> Búsqueda completada en @tiempoBusquedaSegundos.ToString("F2") segundos</strong>
            </div>
        }

        @if (resultados != null && resultados.Any())
        {
            <div class="card shadow">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0"><i class="fas fa-shopping-cart me-2"></i>@resultados.Count Productos Encontrados</h5>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead>
                                <tr>
                                    <th>Imagen</th>
                                    <th>Producto</th>
                                    <th class="text-end">Mejor Precio</th>
                                    <th class="text-center">Ofertas</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var producto in resultados)
                                {
                                    var precioMin = producto.Ofertas.Any() ? producto.Ofertas.Min(o => o.Precio) : 0;
                                    <tr style="cursor:pointer" @onclick="() => ExpandirOferta(producto.Id)">
                                        <td>
                                            @if (!string.IsNullOrEmpty(producto.ImagenUrl))
                                            {
                                                <img src="@producto.ImagenUrl" alt="@producto.Nombre" style="width:60px;height:60px;object-fit:cover" class="rounded" />
                                            }
                                        </td>
                                        <td><strong>@producto.Nombre</strong></td>
                                        <td class="text-end"><h5 class="text-success mb-0">$@precioMin.ToString("N0")</h5></td>
                                        <td class="text-center"><span class="badge bg-info">@producto.Ofertas.Count</span></td>
                                        <td><i class="fas @(productoExpandido == producto.Id ? "fa-chevron-up" : "fa-chevron-down")"></i></td>
                                    </tr>
                                    @if (productoExpandido == producto.Id)
                                    {
                                        <tr>
                                            <td colspan="5" class="bg-light">
                                                <div class="p-3">
                                                    <table class="table table-sm table-bordered bg-white">
                                                        <thead>
                                                            <tr>
                                                                <th>Tienda</th>
                                                                <th class="text-end">Precio</th>
                                                                <th>Acción</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var oferta in producto.Ofertas.OrderBy(o => o.Precio))
                                                            {
                                                                <tr>
                                                                    <td><strong>@oferta.TiendaNombre</strong></td>
                                                                    <td class="text-end"><strong>$@oferta.Precio.ToString("N0")</strong></td>
                                                                    <td>
                                                                        @if (!string.IsNullOrEmpty(oferta.UrlProductoEnTienda))
                                                                        {
                                                                            <button class="btn btn-sm btn-success" @onclick="() => AbrirEnTienda(oferta.UrlProductoEnTienda)" @onclick:stopPropagation="true">
                                                                                <i class="fas fa-external-link-alt"></i> Ver
                                                                            </button>
                                                                        }
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="alert alert-warning text-center">
                <h4> No se encontraron consumibles</h4>
            </div>
        }
    }
</div>

@code {
    private List<ProductoConOfertasDto>? resultados;
    private string terminoBusqueda = string.Empty;
    private bool estaBuscando = false;
    private bool busquedaRealizada = false;
    private int? productoExpandido = null;
    private double tiempoBusquedaSegundos = 0;

    private async Task OnBuscarTermino()
    {
        if (string.IsNullOrWhiteSpace(terminoBusqueda)) return;
        await EjecutarBusqueda(terminoBusqueda.Trim(), null);
    }

    private async Task EjecutarBusqueda(string termino, string? categoria)
    {
        estaBuscando = true;
        busquedaRealizada = false;
        StateHasChanged();

        var stopwatch = System.Diagnostics.Stopwatch.StartNew();
        try
        {
            Logger.LogInformation(" Búsqueda: {Termino}", termino);
            var resultadosList = await ComparadorService.BuscarConsumiblesAsync(termino, categoria);
            resultados = resultadosList.ToList();
            stopwatch.Stop();
            tiempoBusquedaSegundos = stopwatch.Elapsed.TotalSeconds;
            Logger.LogInformation(" {Count} productos encontrados", resultados.Count);
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, " Error");
            resultados = new List<ProductoConOfertasDto>();
        }
        finally
        {
            estaBuscando = false;
            busquedaRealizada = true;
            StateHasChanged();
        }
    }

    private void LimpiarFiltros()
    {
        terminoBusqueda = string.Empty;
        resultados = null;
        busquedaRealizada = false;
        productoExpandido = null;
        StateHasChanged();
    }

    private void ExpandirOferta(int productoId)
    {
        productoExpandido = productoExpandido == productoId ? null : productoId;
        StateHasChanged();
    }

    private void AbrirEnTienda(string url)
    {
        if (!string.IsNullOrEmpty(url))
        {
            Navigation.NavigateTo(url, true);
        }
    }
}
