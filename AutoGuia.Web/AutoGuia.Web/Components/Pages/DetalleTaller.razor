@page "/taller/{TallerId:int}"
@rendermode InteractiveServer
@inject ITallerService TallerService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>@(taller?.Nombre ?? "Taller") - AutoGuía</PageTitle>

<div class="container py-4">
    @if (cargando)
    {
        <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Cargando información del taller...</span>
            </div>
            <p class="mt-2">Cargando información del taller...</p>
        </div>
    }
    else if (taller == null)
    {
        <div class="text-center py-5">
            <i class="fas fa-exclamation-triangle fa-3x text-warning mb-3"></i>
            <h3>Taller no encontrado</h3>
            <p class="text-muted">El taller que buscas no existe o no está disponible.</p>
            <a href="/talleres" class="btn btn-primary">
                <i class="fas fa-arrow-left me-2"></i>
                Volver a talleres
            </a>
        </div>
    }
    else
    {
        <!-- Breadcrumb -->
        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="/" class="text-decoration-none">
                        <i class="fas fa-home"></i> Inicio
                    </a>
                </li>
                <li class="breadcrumb-item">
                    <a href="/talleres" class="text-decoration-none">Talleres</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">@taller.Nombre</li>
            </ol>
        </nav>

        <div class="row">
            <!-- Información principal del taller -->
            <div class="col-lg-8 mb-4">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <!-- Encabezado -->
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <div>
                                <h1 class="h3 mb-2">
                                    @taller.Nombre
                                    @if (taller.EsVerificado)
                                    {
                                        <span class="badge bg-success ms-2">
                                            <i class="fas fa-check-circle"></i> Verificado
                                        </span>
                                    }
                                </h1>
                                
                                <!-- Calificación -->
                                <div class="d-flex align-items-center mb-2">
                                    @if (taller.CalificacionPromedio.HasValue && taller.CalificacionPromedio > 0)
                                    {
                                        <div class="me-2">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <i class="fas fa-star @(i <= Math.Round(taller.CalificacionPromedio.Value) ? "text-warning" : "text-muted")"></i>
                                            }
                                        </div>
                                        <span class="fw-bold me-2">@taller.CalificacionPromedio.Value.ToString("F1")</span>
                                        <span class="text-muted">(@taller.TotalResenas reseña@(taller.TotalResenas != 1 ? "s" : ""))</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Sin calificaciones aún</span>
                                    }
                                </div>
                            </div>
                            
                            <!-- Botones de acción -->
                            <div class="d-flex gap-2">
                                <button class="btn btn-outline-primary btn-sm" @onclick="CompartirTaller">
                                    <i class="fas fa-share-alt"></i>
                                    <span class="d-none d-md-inline ms-1">Compartir</span>
                                </button>
                                
                                @if (taller.Latitud.HasValue && taller.Longitud.HasValue)
                                {
                                    <a href="https://www.google.com/maps/dir/?api=1&destination=@taller.Latitud,@taller.Longitud" 
                                       target="_blank" 
                                       class="btn btn-outline-success btn-sm">
                                        <i class="fas fa-directions"></i>
                                        <span class="d-none d-md-inline ms-1">Cómo llegar</span>
                                    </a>
                                }
                            </div>
                        </div>

                        <!-- Descripción -->
                        @if (!string.IsNullOrWhiteSpace(taller.Descripcion))
                        {
                            <div class="mb-4">
                                <h5>Descripción</h5>
                                <p class="text-muted">@taller.Descripcion</p>
                            </div>
                        }

                        <!-- Especialidades -->
                        @if (!string.IsNullOrWhiteSpace(taller.Especialidades))
                        {
                            <div class="mb-4">
                                <h5>Especialidades</h5>
                                <div class="d-flex flex-wrap gap-2">
                                    @foreach (var especialidad in taller.Especialidades.Split(',', StringSplitOptions.RemoveEmptyEntries))
                                    {
                                        <span class="badge bg-light text-dark border">@especialidad.Trim()</span>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Sección de Experiencias de Usuarios -->
                <div class="mt-4">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">
                                <i class="fas fa-comments me-2"></i>
                                Experiencias de Usuarios
                            </h5>
                            <button class="btn btn-primary btn-sm" @onclick="MostrarModalNuevaExperiencia">
                                <i class="fas fa-plus me-1"></i>
                                Compartir Experiencia
                            </button>
                        </div>
                        <div class="card-body">
                            @if (experiencias?.Any() == true)
                            {
                                @foreach (var experiencia in experiencias.OrderByDescending(e => e.Fecha))
                                {
                                    <div class="border-bottom pb-3 mb-3">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <div class="d-flex align-items-center">
                                                <div class="avatar-circle me-2">
                                                    @experiencia.UsuarioInicial
                                                </div>
                                                <div>
                                                    <h6 class="mb-0">@experiencia.Usuario</h6>
                                                    <small class="text-muted">@experiencia.Fecha.ToString("dd/MM/yyyy HH:mm")</small>
                                                </div>
                                            </div>
                                            <div class="d-flex align-items-center">
                                                @if (experiencia.EsPositiva)
                                                {
                                                    <span class="badge bg-success">
                                                        <i class="fas fa-thumbs-up me-1"></i>Experiencia Positiva
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-danger">
                                                        <i class="fas fa-thumbs-down me-1"></i>Experiencia Negativa
                                                    </span>
                                                }
                                                <div class="ms-2">
                                                    @for (int i = 1; i <= 5; i++)
                                                    {
                                                        <i class="fas fa-star @(i <= experiencia.Calificacion ? "text-warning" : "text-muted")"></i>
                                                    }
                                                    <small class="text-muted ms-1">(@experiencia.Calificacion/5)</small>
                                                </div>
                                            </div>
                                        </div>
                                        <p class="mb-2">@experiencia.Comentario</p>
                                        @if (!string.IsNullOrWhiteSpace(experiencia.ServicioTipo))
                                        {
                                            <small class="text-muted">
                                                <i class="fas fa-wrench me-1"></i>Servicio: @experiencia.ServicioTipo
                                            </small>
                                        }
                                        
                                        <!-- Botones de interacción -->
                                        <div class="mt-2">
                                            <button class="btn btn-outline-primary btn-sm me-2" @onclick="() => ToggleLike(experiencia.Id)">
                                                <i class="fas fa-thumbs-up me-1"></i>
                                                Útil (@experiencia.Likes)
                                            </button>
                                            <button class="btn btn-outline-secondary btn-sm" @onclick="() => ResponderExperiencia(experiencia.Id)">
                                                <i class="fas fa-reply me-1"></i>
                                                Responder
                                            </button>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="text-center py-4">
                                    <i class="fas fa-comments fa-3x text-muted mb-3"></i>
                                    <h6>No hay experiencias compartidas aún</h6>
                                    <p class="text-muted">¡Sé el primero en compartir tu experiencia con este taller!</p>
                                    <button class="btn btn-primary" @onclick="MostrarModalNuevaExperiencia">
                                        <i class="fas fa-plus me-2"></i>
                                        Compartir Primera Experiencia
                                    </button>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- Información adicional del taller -->
                <div class="mt-4">
                    <div class="alert alert-info">
                        <h6>AutoGuía - Nueva Arquitectura</h6>
                        <p class="mb-0">Este taller forma parte del directorio tradicional de AutoGuía. 
                        Para comparación de precios de repuestos automotrices, 
                        visite la sección de <a href="/productos" class="alert-link">Comparador de Precios</a>.</p>
                    </div>
                </div>
            </div>

            <!-- Información de contacto y ubicación -->
            <div class="col-lg-4">
                <div class="card shadow-sm sticky-top" style="top: 20px;">
                    <div class="card-header">
                        <h6 class="mb-0">
                            <i class="fas fa-info-circle me-2"></i>
                            Información de contacto
                        </h6>
                    </div>
                    <div class="card-body">
                        <!-- Dirección -->
                        <div class="mb-3">
                            <div class="d-flex align-items-start">
                                <i class="fas fa-map-marker-alt text-primary me-3 mt-1"></i>
                                <div>
                                    <strong>Dirección</strong><br>
                                    <span class="text-muted">@taller.Direccion</span><br>
                                    <span class="text-muted">@taller.Ciudad, @taller.Region</span>
                                </div>
                            </div>
                        </div>

                        <!-- Teléfono -->
                        @if (!string.IsNullOrWhiteSpace(taller.Telefono))
                        {
                            <div class="mb-3">
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-phone text-primary me-3"></i>
                                    <div>
                                        <strong>Teléfono</strong><br>
                                        <a href="tel:@taller.Telefono" class="text-decoration-none">@taller.Telefono</a>
                                    </div>
                                </div>
                            </div>
                        }

                        <!-- Email -->
                        @if (!string.IsNullOrWhiteSpace(taller.Email))
                        {
                            <div class="mb-3">
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-envelope text-primary me-3"></i>
                                    <div>
                                        <strong>Email</strong><br>
                                        <a href="mailto:@taller.Email" class="text-decoration-none">@taller.Email</a>
                                    </div>
                                </div>
                            </div>
                        }

                        <!-- Horario -->
                        @if (!string.IsNullOrWhiteSpace(taller.HorarioAtencion))
                        {
                            <div class="mb-3">
                                <div class="d-flex align-items-start">
                                    <i class="fas fa-clock text-primary me-3 mt-1"></i>
                                    <div>
                                        <strong>Horario de atención</strong><br>
                                        <span class="text-muted">@taller.HorarioAtencion</span>
                                    </div>
                                </div>
                            </div>
                        }

                        <!-- Botones de contacto -->
                        <hr>
                        <div class="d-grid gap-2">
                            @if (!string.IsNullOrWhiteSpace(taller.Telefono))
                            {
                                <a href="tel:@taller.Telefono" class="btn btn-primary">
                                    <i class="fas fa-phone me-2"></i>
                                    Llamar ahora
                                </a>
                            }
                            
                            @if (!string.IsNullOrWhiteSpace(taller.Email))
                            {
                                <a href="mailto:@taller.Email" class="btn btn-outline-primary">
                                    <i class="fas fa-envelope me-2"></i>
                                    Enviar email
                                </a>
                            }

                            <a href="/talleres" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-2"></i>
                                Volver a talleres
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public int TallerId { get; set; }

    private TallerDto? taller;
    private bool cargando = true;
    
    // Variables para experiencias de usuarios
    private List<ExperienciaUsuarioDto> experiencias = new();
    private bool mostrarModalExperiencia = false;
    private ExperienciaUsuarioDto nuevaExperiencia = new();

    protected override async Task OnInitializedAsync()
    {
        await CargarTaller();
        await CargarExperiencias();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (TallerId > 0)
        {
            cargando = true;
            StateHasChanged();
            await CargarTaller();
        }
    }

    private async Task CargarTaller()
    {
        try
        {
            taller = await TallerService.ObtenerTallerPorIdAsync(TallerId);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error cargando taller: {ex.Message}");
        }
        finally
        {
            cargando = false;
            StateHasChanged();
        }
    }

    // Método OnResenaCreada eliminado - funcionalidad de reseñas removida en nueva arquitectura

    private async Task CompartirTaller()
    {
        try
        {
            var url = Navigation.Uri;
            var texto = $"Mira este taller: {taller?.Nombre}";
            
            // Usar la función mejorada de compartir
            await JSRuntime.InvokeVoidAsync("autoguiaTest.shareContent", taller?.Nombre ?? "Taller", texto, url);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error compartiendo: {ex.Message}");
        }
    }

    private async Task CargarExperiencias()
    {
        try
        {
            // Simular datos de experiencias mientras no tengamos el servicio real
            await Task.Delay(100); // Simular latencia
            
            experiencias = new List<ExperienciaUsuarioDto>
            {
                new ExperienciaUsuarioDto
                {
                    Id = 1,
                    Usuario = "Carlos Martinez",
                    UsuarioInicial = "CM",
                    Comentario = "Excelente servicio! Llevé mi auto para mantención y quedó perfecto. El personal es muy profesional y me explicaron todo detalladamente. Los precios son justos y respetan los tiempos acordados.",
                    EsPositiva = true,
                    Calificacion = 5,
                    ServicioTipo = "Mantención Preventiva",
                    Fecha = DateTime.Now.AddDays(-3),
                    Likes = 12
                },
                new ExperienciaUsuarioDto
                {
                    Id = 2,
                    Usuario = "María González",
                    UsuarioInicial = "MG",
                    Comentario = "Servicio regular. Arreglaron mi problema de frenos pero tardaron más de lo prometido. El trabajo quedó bien pero la comunicación podría mejorar.",
                    EsPositiva = false,
                    Calificacion = 3,
                    ServicioTipo = "Frenos",
                    Fecha = DateTime.Now.AddDays(-7),
                    Likes = 5
                },
                new ExperienciaUsuarioDto
                {
                    Id = 3,
                    Usuario = "Roberto Silva",
                    UsuarioInicial = "RS",
                    Comentario = "Muy recomendado! Solucionaron un problema complejo con la transmisión que otros talleres no pudieron resolver. Precio competitivo y garantía del trabajo.",
                    EsPositiva = true,
                    Calificacion = 5,
                    ServicioTipo = "Transmisión",
                    Fecha = DateTime.Now.AddDays(-10),
                    Likes = 18
                }
            };
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error cargando experiencias: {ex.Message}");
            experiencias = new List<ExperienciaUsuarioDto>();
        }
    }

    private void MostrarModalNuevaExperiencia()
    {
        nuevaExperiencia = new ExperienciaUsuarioDto
        {
            EsPositiva = true,
            Calificacion = 5,
            Usuario = "Usuario Anónimo", // En producción obtener del contexto de usuario
            UsuarioInicial = "UA",
            Fecha = DateTime.Now,
            Likes = 0
        };
        mostrarModalExperiencia = true;
        StateHasChanged();
    }

    private void CerrarModalExperiencia()
    {
        mostrarModalExperiencia = false;
        StateHasChanged();
    }

    private async Task GuardarExperiencia()
    {
        if (string.IsNullOrWhiteSpace(nuevaExperiencia.Comentario) || nuevaExperiencia.Comentario.Length < 10)
            return;

        try
        {
            // En producción, guardar en base de datos a través del servicio
            nuevaExperiencia.Id = experiencias.Count + 1;
            experiencias.Insert(0, nuevaExperiencia);
            
            CerrarModalExperiencia();
            
            // Mostrar mensaje de éxito (opcional)
            await JSRuntime.InvokeVoidAsync("alert", "¡Experiencia publicada exitosamente! Gracias por compartir tu opinión.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error guardando experiencia: {ex.Message}");
            await JSRuntime.InvokeVoidAsync("alert", "Error al guardar la experiencia. Intenta nuevamente.");
        }
    }

    private async Task ToggleLike(int experienciaId)
    {
        try
        {
            var experiencia = experiencias.FirstOrDefault(e => e.Id == experienciaId);
            if (experiencia != null)
            {
                experiencia.Likes++;
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error con like: {ex.Message}");
        }
    }

    private async Task ResponderExperiencia(int experienciaId)
    {
        // En el futuro, abrir modal para responder a experiencia específica
        await JSRuntime.InvokeVoidAsync("alert", "Funcionalidad de respuestas en desarrollo.");
    }
}

<!-- Modal para Nueva Experiencia -->
@if (mostrarModalExperiencia)
{
    <div class="modal show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-star me-2"></i>
                        Compartir Experiencia - @taller?.Nombre
                    </h5>
                    <button type="button" class="btn-close" @onclick="CerrarModalExperiencia"></button>
                </div>
                <div class="modal-body">
                    <form @onsubmit="GuardarExperiencia" @onsubmit:preventDefault="true">
                        <!-- Tipo de Experiencia -->
                        <div class="mb-3">
                            <label class="form-label">Tipo de Experiencia</label>
                            <div class="d-flex gap-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="tipoExperiencia" id="positiva" 
                                           @onchange="() => nuevaExperiencia.EsPositiva = true" checked="@nuevaExperiencia.EsPositiva">
                                    <label class="form-check-label text-success" for="positiva">
                                        <i class="fas fa-thumbs-up me-1"></i>Experiencia Positiva
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="tipoExperiencia" id="negativa"
                                           @onchange="() => nuevaExperiencia.EsPositiva = false" checked="@(!nuevaExperiencia.EsPositiva)">
                                    <label class="form-check-label text-danger" for="negativa">
                                        <i class="fas fa-thumbs-down me-1"></i>Experiencia Negativa
                                    </label>
                                </div>
                            </div>
                        </div>

                        <!-- Calificación -->
                        <div class="mb-3">
                            <label class="form-label">Calificación General</label>
                            <div class="d-flex align-items-center">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    var rating = i;
                                    <button type="button" class="btn btn-link p-0 me-1" @onclick="() => nuevaExperiencia.Calificacion = rating">
                                        <i class="fas fa-star fa-lg @(rating <= nuevaExperiencia.Calificacion ? "text-warning" : "text-muted")"></i>
                                    </button>
                                }
                                <span class="ms-2 text-muted">(@nuevaExperiencia.Calificacion/5 estrellas)</span>
                            </div>
                        </div>

                        <!-- Tipo de Servicio -->
                        <div class="mb-3">
                            <label for="servicioTipo" class="form-label">Tipo de Servicio</label>
                            <select class="form-select" id="servicioTipo" @bind="nuevaExperiencia.ServicioTipo">
                                <option value="">Seleccionar tipo de servicio...</option>
                                <option value="Mecánica General">Mecánica General</option>
                                <option value="Frenos">Frenos</option>
                                <option value="Suspensión">Suspensión</option>
                                <option value="Motor">Motor</option>
                                <option value="Transmisión">Transmisión</option>
                                <option value="Electricidad">Electricidad</option>
                                <option value="Aires Acondicionados">Aires Acondicionados</option>
                                <option value="Neumáticos">Neumáticos</option>
                                <option value="Chapa y Pintura">Chapa y Pintura</option>
                                <option value="Mantención Preventiva">Mantención Preventiva</option>
                                <option value="Otro">Otro</option>
                            </select>
                        </div>

                        <!-- Comentario -->
                        <div class="mb-3">
                            <label for="comentario" class="form-label">Tu Experiencia *</label>
                            <textarea class="form-control" id="comentario" rows="4" 
                                      @bind="nuevaExperiencia.Comentario" required
                                      placeholder="Comparte los detalles de tu experiencia: calidad del servicio, atención al cliente, tiempo de entrega, precios, etc."></textarea>
                            <div class="form-text">Mínimo 10 caracteres. Sé específico para ayudar a otros usuarios.</div>
                        </div>

                        <!-- Botones -->
                        <div class="d-flex justify-content-end gap-2">
                            <button type="button" class="btn btn-secondary" @onclick="CerrarModalExperiencia">
                                Cancelar
                            </button>
                            <button type="submit" class="btn btn-primary" disabled="@(string.IsNullOrWhiteSpace(nuevaExperiencia.Comentario) || nuevaExperiencia.Comentario.Length < 10)">
                                <i class="fas fa-save me-2"></i>
                                Publicar Experiencia
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<style>
    .avatar-circle {
        width: 40px;
        height: 40px;
        background: linear-gradient(45deg, #007bff, #0056b3);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: bold;
        font-size: 14px;
    }
</style>