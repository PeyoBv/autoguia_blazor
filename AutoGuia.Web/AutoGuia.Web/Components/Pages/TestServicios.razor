@page "/test-productos"
@rendermode InteractiveServer
@inject IComparadorService ComparadorService
@inject IVehiculoService VehiculoService
@inject IProductoService ProductoService
@inject ITiendaService TiendaService

<h3>Test de Servicios - AutoGu√≠a</h3>

<div class="container py-4">
    <h1>Test de Servicios de AutoGu√≠a</h1>
    <p class="text-muted">Esta p√°gina verifica que todos los servicios funcionen correctamente.</p>

    <div class="row">
        <!-- Test ComparadorService -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">ComparadorService</h5>
                </div>
                <div class="card-body">
                    <button @onclick="TestComparadorService" class="btn btn-primary mb-3" disabled="@cargandoComparador">
                        @if (cargandoComparador)
                        {
                            <span class="spinner-border spinner-border-sm me-2"></span>
                        }
                        Test Buscar Productos
                    </button>

                    @if (resultadoComparador != null)
                    {
                        <div class="alert alert-success">
                            <strong>‚úÖ √âxito:</strong> Encontrados @resultadoComparador.Total productos
                        </div>
                        @if (resultadoComparador.Productos?.Any() == true)
                        {
                            <ul class="list-group">
                                @foreach (var producto in resultadoComparador.Productos.Take(3))
                                {
                                    <li class="list-group-item">
                                        <strong>@producto.Nombre</strong><br>
                                        <small class="text-muted">@producto.NumeroDeParte - $@producto.PrecioMinimo.ToString("N0")</small>
                                    </li>
                                }
                            </ul>
                        }
                    }

                    @if (!string.IsNullOrEmpty(errorComparador))
                    {
                        <div class="alert alert-danger">
                            <strong>‚ùå Error:</strong> @errorComparador
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Test VehiculoService -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">VehiculoService</h5>
                </div>
                <div class="card-body">
                    <button @onclick="TestVehiculoService" class="btn btn-primary mb-3" disabled="@cargandoVehiculo">
                        @if (cargandoVehiculo)
                        {
                            <span class="spinner-border spinner-border-sm me-2"></span>
                        }
                        Test Obtener Marcas
                    </button>

                    @if (marcas?.Any() == true)
                    {
                        <div class="alert alert-success">
                            <strong>‚úÖ √âxito:</strong> @marcas.Count() marcas encontradas
                        </div>
                        <ul class="list-group">
                            @foreach (var marca in marcas.Take(5))
                            {
                                <li class="list-group-item">
                                    <strong>@marca.Nombre</strong>
                                    <small class="text-muted">(@marca.TotalModelos modelos)</small>
                                </li>
                            }
                        </ul>
                    }

                    @if (!string.IsNullOrEmpty(errorVehiculo))
                    {
                        <div class="alert alert-danger">
                            <strong>‚ùå Error:</strong> @errorVehiculo
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Test ProductoService -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">ProductoService</h5>
                </div>
                <div class="card-body">
                    <button @onclick="TestProductoService" class="btn btn-primary mb-3" disabled="@cargandoProducto">
                        @if (cargandoProducto)
                        {
                            <span class="spinner-border spinner-border-sm me-2"></span>
                        }
                        Test Obtener Productos
                    </button>

                    @if (productos?.Any() == true)
                    {
                        <div class="alert alert-success">
                            <strong>‚úÖ √âxito:</strong> @productos.Count() productos encontrados
                        </div>
                        <ul class="list-group">
                            @foreach (var producto in productos.Take(3))
                            {
                                <li class="list-group-item">
                                    <strong>@producto.Nombre</strong><br>
                                    <small class="text-muted">@producto.NumeroDeparte</small>
                                </li>
                            }
                        </ul>
                    }

                    @if (!string.IsNullOrEmpty(errorProducto))
                    {
                        <div class="alert alert-danger">
                            <strong>‚ùå Error:</strong> @errorProducto
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Test TiendaService -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">TiendaService</h5>
                </div>
                <div class="card-body">
                    <button @onclick="TestTiendaService" class="btn btn-primary mb-3" disabled="@cargandoTienda">
                        @if (cargandoTienda)
                        {
                            <span class="spinner-border spinner-border-sm me-2"></span>
                        }
                        Test Obtener Tiendas
                    </button>

                    @if (tiendas?.Any() == true)
                    {
                        <div class="alert alert-success">
                            <strong>‚úÖ √âxito:</strong> @tiendas.Count() tiendas encontradas
                        </div>
                        <ul class="list-group">
                            @foreach (var tienda in tiendas)
                            {
                                <li class="list-group-item">
                                    <strong>@tienda.Nombre</strong><br>
                                    <small class="text-muted">@tienda.UrlSitioWeb</small>
                                </li>
                            }
                        </ul>
                    }

                    @if (!string.IsNullOrEmpty(errorTienda))
                    {
                        <div class="alert alert-danger">
                            <strong>‚ùå Error:</strong> @errorTienda
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Test Completo -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">Test Completo</h5>
                </div>
                <div class="card-body">
                    <button @onclick="TestTodo" class="btn btn-success btn-lg" disabled="@cargandoTodo">
                        @if (cargandoTodo)
                        {
                            <span class="spinner-border spinner-border-sm me-2"></span>
                        }
                        Probar Todos los Servicios
                    </button>

                    @if (testCompleto)
                    {
                        <div class="alert alert-success mt-3">
                            <h6>üéâ Test Completo Finalizado</h6>
                            <p class="mb-0">Todos los servicios han sido probados. Revisa los resultados individuales arriba.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    // Estados de carga
    private bool cargandoComparador = false;
    private bool cargandoVehiculo = false;
    private bool cargandoProducto = false;
    private bool cargandoTienda = false;
    private bool cargandoTodo = false;
    private bool testCompleto = false;

    // Resultados
    private ResultadoBusquedaDto? resultadoComparador;
    private IEnumerable<MarcaDto>? marcas;
    private IEnumerable<ProductoDto>? productos;
    private IEnumerable<TiendaDto>? tiendas;

    // Errores
    private string errorComparador = "";
    private string errorVehiculo = "";
    private string errorProducto = "";
    private string errorTienda = "";

    private async Task TestComparadorService()
    {
        cargandoComparador = true;
        errorComparador = "";
        StateHasChanged();

        try
        {
            var busqueda = new BusquedaProductoDto
            {
                TerminoBusqueda = "filtro",
                Pagina = 1,
                TamanoPagina = 5
            };

            resultadoComparador = await ComparadorService.BuscarProductosAsync(busqueda);
        }
        catch (Exception ex)
        {
            errorComparador = ex.Message;
        }
        finally
        {
            cargandoComparador = false;
            StateHasChanged();
        }
    }

    private async Task TestVehiculoService()
    {
        cargandoVehiculo = true;
        errorVehiculo = "";
        StateHasChanged();

        try
        {
            marcas = await VehiculoService.ObtenerMarcasAsync();
        }
        catch (Exception ex)
        {
            errorVehiculo = ex.Message;
        }
        finally
        {
            cargandoVehiculo = false;
            StateHasChanged();
        }
    }

    private async Task TestProductoService()
    {
        cargandoProducto = true;
        errorProducto = "";
        StateHasChanged();

        try
        {
            productos = await ProductoService.ObtenerProductosAsync();
        }
        catch (Exception ex)
        {
            errorProducto = ex.Message;
        }
        finally
        {
            cargandoProducto = false;
            StateHasChanged();
        }
    }

    private async Task TestTiendaService()
    {
        cargandoTienda = true;
        errorTienda = "";
        StateHasChanged();

        try
        {
            tiendas = await TiendaService.ObtenerTiendasAsync();
        }
        catch (Exception ex)
        {
            errorTienda = ex.Message;
        }
        finally
        {
            cargandoTienda = false;
            StateHasChanged();
        }
    }

    private async Task TestTodo()
    {
        cargandoTodo = true;
        testCompleto = false;
        StateHasChanged();

        await TestComparadorService();
        await Task.Delay(500);

        await TestVehiculoService();
        await Task.Delay(500);

        await TestProductoService();
        await Task.Delay(500);

        await TestTiendaService();
        await Task.Delay(500);

        cargandoTodo = false;
        testCompleto = true;
        StateHasChanged();
    }
}