@page "/foro"
@rendermode InteractiveServer
@inject IForoService ForoService

<PageTitle>Foro Comunitario - AutoGu√≠a</PageTitle>

<div class="container py-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="h2">
                    <i class="fas fa-comments me-2"></i>
                    Foro Comunitario
                </h1>
                <button class="btn btn-primary" @onclick="MostrarFormularioPublicacion">
                    <i class="fas fa-plus me-2"></i>
                    Nueva Publicaci√≥n
                </button>
            </div>

            <!-- Categor√≠as Tem√°ticas -->
            <div class="row mb-4">
                <div class="col-12">
                    <h5 class="mb-3">Categor√≠as de Discusi√≥n</h5>
                    <div class="row g-3">
                        <div class="col-md-3">
                            <div class="card h-100 category-card @(categoriaSeleccionada == "valoraciones" ? "border-primary" : "")" 
                                 @onclick="@(() => FiltrarPorCategoria("valoraciones"))" style="cursor: pointer;">
                                <div class="card-body text-center">
                                    <i class="fas fa-star fa-2x text-warning mb-2"></i>
                                    <h6>Valoraciones y Rese√±as</h6>
                                    <p class="card-text small text-muted">Comparte experiencias con talleres, productos y servicios</p>
                                    <span class="badge bg-warning">@((publicaciones?.Count(p => p.Categoria == "Valoraciones")) ?? 0) publicaciones</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card h-100 category-card @(categoriaSeleccionada == "consultas" ? "border-primary" : "")" 
                                 @onclick="@(() => FiltrarPorCategoria("consultas"))" style="cursor: pointer;">
                                <div class="card-body text-center">
                                    <i class="fas fa-question-circle fa-2x text-info mb-2"></i>
                                    <h6>Consultas T√©cnicas</h6>
                                    <p class="card-text small text-muted">Preguntas mec√°nicas y t√©cnicas sobre veh√≠culos</p>
                                    <span class="badge bg-info">@((publicaciones?.Count(p => p.Categoria == "Consultas Mec√°nicas")) ?? 0) publicaciones</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card h-100 category-card @(categoriaSeleccionada == "rendimiento" ? "border-primary" : "")" 
                                 @onclick="@(() => FiltrarPorCategoria("rendimiento"))" style="cursor: pointer;">
                                <div class="card-body text-center">
                                    <i class="fas fa-tachometer-alt fa-2x text-success mb-2"></i>
                                    <h6>Rendimiento y Tuning</h6>
                                    <p class="card-text small text-muted">Discusiones sobre performance y modificaciones</p>
                                    <span class="badge bg-success">@((publicaciones?.Count(p => p.Categoria == "Rendimiento")) ?? 0) publicaciones</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card h-100 category-card @(categoriaSeleccionada == "productos" ? "border-primary" : "")" 
                                 @onclick="@(() => FiltrarPorCategoria("productos"))" style="cursor: pointer;">
                                <div class="card-body text-center">
                                    <i class="fas fa-tools fa-2x text-danger mb-2"></i>
                                    <h6>Productos Alternativos</h6>
                                    <p class="card-text small text-muted">Alternativas de repuestos y productos automotrices</p>
                                    <span class="badge bg-danger">@((publicaciones?.Count(p => p.Categoria == "Productos Alternativos")) ?? 0) publicaciones</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Filtros y b√∫squeda -->
                    <div class="mt-3 d-flex gap-2 align-items-center flex-wrap">
                        <button class="btn btn-outline-secondary btn-sm @(categoriaSeleccionada == "" ? "active" : "")" 
                                @onclick="@(() => FiltrarPorCategoria(""))">
                            <i class="fas fa-list me-1"></i>Todas las categor√≠as
                        </button>
                        @if (!string.IsNullOrEmpty(categoriaSeleccionada))
                        {
                            <button class="btn btn-outline-danger btn-sm" @onclick="LimpiarFiltros">
                                <i class="fas fa-times me-1"></i>Limpiar filtro
                            </button>
                        }
                        <div class="ms-auto d-flex align-items-center gap-2">
                            <label class="form-label mb-0 small">Ordenar por:</label>
                            <select class="form-select form-select-sm" value="@ordenSeleccionado" @onchange="OnOrdenChanged" style="width: auto;">
                                <option value="fecha">M√°s recientes</option>
                                <option value="populares">M√°s populares</option>
                                <option value="respuestas">M√°s comentadas</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (mostrarFormulario)
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-edit me-2"></i>
                            Crear Nueva Publicaci√≥n
                        </h5>
                    </div>
                    <div class="card-body">
                        <EditForm Model="nuevaPublicacion" OnValidSubmit="CrearPublicacion">
                            <DataAnnotationsValidator />
                            
                            <div class="mb-3">
                                <label class="form-label">T√≠tulo</label>
                                <InputText @bind-Value="nuevaPublicacion.Titulo" class="form-control" placeholder="Ingresa un t√≠tulo descriptivo..." />
                                <ValidationMessage For="() => nuevaPublicacion.Titulo" />
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label">Categor√≠a</label>
                                <InputSelect @bind-Value="nuevaPublicacion.Categoria" class="form-select">
                                    <option value="">Selecciona una categor√≠a</option>
                                    <option value="Valoraciones">üåü Valoraciones y Rese√±as</option>
                                    <option value="Consultas Mec√°nicas">‚ùì Consultas T√©cnicas</option>
                                    <option value="Rendimiento">üèéÔ∏è Rendimiento y Tuning</option>
                                    <option value="Productos Alternativos">üîß Productos Alternativos</option>
                                    <option value="Mantenimiento">üõ†Ô∏è Mantenimiento General</option>
                                    <option value="Compra/Venta">üí∞ Compra y Venta</option>
                                </InputSelect>
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label">Contenido</label>
                                <InputTextArea @bind-Value="nuevaPublicacion.Contenido" class="form-control" rows="5" placeholder="Describe tu consulta o comparte tu experiencia..."></InputTextArea>
                                <ValidationMessage For="() => nuevaPublicacion.Contenido" />
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label">Etiquetas (separadas por coma)</label>
                                <InputText @bind-Value="nuevaPublicacion.Etiquetas" class="form-control" placeholder="motor, frenos, toyota, etc." />
                                <small class="form-text text-muted">Las etiquetas ayudan a otros usuarios a encontrar tu publicaci√≥n</small>
                            </div>
                            
                            <div class="d-flex gap-2">
                                <button type="submit" class="btn btn-success" disabled="@publicando">
                                    @if (publicando)
                                    {
                                        <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                    }
                                    else
                                    {
                                        <i class="fas fa-paper-plane me-2"></i>
                                    }
                                    Publicar
                                </button>
                                <button type="button" class="btn btn-secondary" @onclick="CancelarPublicacion">
                                    Cancelar
                                </button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (cargando)
    {
        <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
            <p class="mt-2">Cargando publicaciones...</p>
        </div>
    }
    else if (publicaciones?.Any() == true)
    {
        <div class="row">
            <div class="col-lg-9">
                @foreach (var publicacion in publicaciones)
                {
                    <div class="card mb-3 shadow-sm">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <div class="flex-grow-1">
                                    <h5 class="card-title mb-1">
                                        @if (publicacion.EsDestacado)
                                        {
                                            <i class="fas fa-star text-warning me-1"></i>
                                        }
                                        <a href="/foro/@publicacion.Id" class="text-decoration-none">@publicacion.Titulo</a>
                                    </h5>
                                    <div class="d-flex align-items-center gap-2 mb-2">
                                        <small class="text-muted">
                                            <i class="fas fa-user me-1"></i>@publicacion.NombreUsuario
                                        </small>
                                        <small class="text-muted">
                                            <i class="fas fa-clock me-1"></i>@publicacion.FechaCreacion.ToString("dd/MM/yyyy HH:mm")
                                        </small>
                                        @if (!string.IsNullOrEmpty(publicacion.Categoria))
                                        {
                                            <span class="badge bg-primary">@publicacion.Categoria</span>
                                        }
                                        @if (publicacion.EsCerrado)
                                        {
                                            <span class="badge bg-secondary">Cerrado</span>
                                        }
                                    </div>
                                </div>
                            </div>
                            
                            <p class="card-text">@publicacion.Contenido.Substring(0, Math.Min(publicacion.Contenido.Length, 200))@(publicacion.Contenido.Length > 200 ? "..." : "")</p>
                            
                            @if (!string.IsNullOrEmpty(publicacion.Etiquetas))
                            {
                                <div class="mb-2">
                                    @foreach (var etiqueta in publicacion.Etiquetas.Split(',', StringSplitOptions.RemoveEmptyEntries))
                                    {
                                        <span class="badge bg-light text-dark me-1">#@etiqueta.Trim()</span>
                                    }
                                </div>
                            }
                            
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="d-flex gap-3 align-items-center">
                                    <small class="text-muted">
                                        <i class="fas fa-eye me-1"></i>@publicacion.Vistas vistas
                                    </small>
                                    <small class="text-muted">
                                        <i class="fas fa-comments me-1"></i>@publicacion.TotalRespuestas respuestas
                                    </small>
                                    
                                    <!-- Sistema de puntuaci√≥n -->
                                    <div class="d-flex align-items-center gap-1">
                                        <button class="btn btn-outline-success btn-sm p-1" @onclick="() => DarLike(publicacion.Id)" title="Me gusta">
                                            <i class="fas fa-thumbs-up"></i>
                                        </button>
                                        <small class="text-success fw-bold">@publicacion.Likes</small>
                                        
                                        <button class="btn btn-outline-danger btn-sm p-1 ms-1" @onclick="() => DarDislike(publicacion.Id)" title="No me gusta">
                                            <i class="fas fa-thumbs-down"></i>
                                        </button>
                                        <small class="text-danger fw-bold">@publicacion.Dislikes</small>
                                        
                                        <!-- Puntuaci√≥n neta -->
                                        @{
                                            var puntuacionNeta = publicacion.Likes - publicacion.Dislikes;
                                        }
                                        <span class="ms-2 badge @(puntuacionNeta >= 0 ? "bg-success" : "bg-danger")">
                                            @(puntuacionNeta >= 0 ? "+" : "")@puntuacionNeta
                                        </span>
                                    </div>
                                </div>
                                <a href="/foro/@publicacion.Id" class="btn btn-outline-primary btn-sm">
                                    <i class="fas fa-arrow-right me-1"></i>
                                    Leer m√°s
                                </a>
                            </div>
                        </div>
                    </div>
                }
                
                <!-- Paginaci√≥n simple -->
                <div class="d-flex justify-content-center mt-4">
                    <button class="btn btn-outline-primary" @onclick="CargarMasPublicaciones" disabled="@cargandoMas">
                        @if (cargandoMas)
                        {
                            <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                        }
                        Cargar m√°s publicaciones
                    </button>
                </div>
            </div>
            
            <div class="col-lg-3">
                <div class="sticky-top">
                    <div class="card mb-3">
                        <div class="card-header">
                            <h6 class="mb-0">
                                <i class="fas fa-info-circle me-2"></i>
                                Acerca del Foro
                            </h6>
                        </div>
                        <div class="card-body">
                            <p class="small mb-2">Bienvenido al foro de AutoGu√≠a. Aqu√≠ puedes:</p>
                            <ul class="small mb-0">
                                <li>Hacer preguntas sobre mec√°nica</li>
                                <li>Compartir experiencias</li>
                                <li>Recomendar talleres</li>
                                <li>Ayudar a otros usuarios</li>
                            </ul>
                        </div>
                    </div>
                    
                    <div class="card">
                        <div class="card-header">
                            <h6 class="mb-0">
                                <i class="fas fa-tags me-2"></i>
                                Categor√≠as Populares
                            </h6>
                        </div>
                        <div class="card-body">
                            <div class="d-flex flex-wrap gap-1">
                                <span class="badge bg-light text-dark">Mantenimiento</span>
                                <span class="badge bg-light text-dark">Frenos</span>
                                <span class="badge bg-light text-dark">Motor</span>
                                <span class="badge bg-light text-dark">Suspensi√≥n</span>
                                <span class="badge bg-light text-dark">Talleres</span>
                                <span class="badge bg-light text-dark">Toyota</span>
                                <span class="badge bg-light text-dark">Chevrolet</span>
                                <span class="badge bg-light text-dark">Ford</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <i class="fas fa-comments fa-3x text-muted mb-3"></i>
            <h3>No hay publicaciones a√∫n</h3>
            <p class="text-muted">¬°S√© el primero en crear una publicaci√≥n!</p>
            <button class="btn btn-primary" @onclick="MostrarFormularioPublicacion">
                <i class="fas fa-plus me-2"></i>
                Crear Primera Publicaci√≥n
            </button>
        </div>
    }
</div>

@code {
    private IEnumerable<PublicacionForoDto>? publicaciones;
    private IEnumerable<PublicacionForoDto>? todasLasPublicaciones; // Para filtrado
    private bool cargando = true;
    private bool cargandoMas = false;
    private bool mostrarFormulario = false;
    private bool publicando = false;
    private int paginaActual = 1;
    
    // Variables para filtrado y ordenamiento
    private string categoriaSeleccionada = "";
    private string ordenSeleccionado = "fecha";
    
    private CrearPublicacionDto nuevaPublicacion = new();

    protected override async Task OnInitializedAsync()
    {
        await CargarPublicaciones();
    }

    private async Task CargarPublicaciones()
    {
        try
        {
            todasLasPublicaciones = await ForoService.ObtenerPublicacionesAsync(paginaActual);
            FiltrarYOrdenarPublicaciones();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error cargando publicaciones: {ex.Message}");
        }
        finally
        {
            cargando = false;
            StateHasChanged();
        }
    }

    private void FiltrarYOrdenarPublicaciones()
    {
        if (todasLasPublicaciones == null) return;

        var filtradas = todasLasPublicaciones.AsEnumerable();

        // Filtrar por categor√≠a
        if (!string.IsNullOrEmpty(categoriaSeleccionada))
        {
            var categoriaFiltro = categoriaSeleccionada switch
            {
                "valoraciones" => "Valoraciones",
                "consultas" => "Consultas Mec√°nicas", 
                "rendimiento" => "Rendimiento",
                "productos" => "Productos Alternativos",
                _ => categoriaSeleccionada
            };
            filtradas = filtradas.Where(p => p.Categoria == categoriaFiltro);
        }

        // Ordenar
        filtradas = ordenSeleccionado switch
        {
            "populares" => filtradas.OrderByDescending(p => p.Likes - p.Dislikes),
            "respuestas" => filtradas.OrderByDescending(p => p.TotalRespuestas),
            _ => filtradas.OrderByDescending(p => p.FechaCreacion)
        };

        publicaciones = filtradas;
        StateHasChanged();
    }

    private void FiltrarPorCategoria(string categoria)
    {
        categoriaSeleccionada = categoria;
        FiltrarYOrdenarPublicaciones();
    }

    private void LimpiarFiltros()
    {
        categoriaSeleccionada = "";
        FiltrarYOrdenarPublicaciones();
    }

    private void OrdenarPublicaciones()
    {
        FiltrarYOrdenarPublicaciones();
    }

    private void OnOrdenChanged(ChangeEventArgs e)
    {
        ordenSeleccionado = e.Value?.ToString() ?? "fecha";
        OrdenarPublicaciones();
    }

    private async Task DarLike(int publicacionId)
    {
        try
        {
            var publicacion = todasLasPublicaciones?.FirstOrDefault(p => p.Id == publicacionId);
            if (publicacion != null)
            {
                publicacion.Likes++;
                FiltrarYOrdenarPublicaciones();
                // En producci√≥n: await ForoService.DarLikeAsync(publicacionId);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error dando like: {ex.Message}");
        }
    }

    private async Task DarDislike(int publicacionId)
    {
        try
        {
            var publicacion = todasLasPublicaciones?.FirstOrDefault(p => p.Id == publicacionId);
            if (publicacion != null)
            {
                publicacion.Dislikes++;
                FiltrarYOrdenarPublicaciones();
                // En producci√≥n: await ForoService.DarDislikeAsync(publicacionId);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error dando dislike: {ex.Message}");
        }
    }

    private async Task CargarMasPublicaciones()
    {
        cargandoMas = true;
        try
        {
            paginaActual++;
            var nuevasPublicaciones = await ForoService.ObtenerPublicacionesAsync(paginaActual);
            
            if (publicaciones != null && nuevasPublicaciones.Any())
            {
                publicaciones = publicaciones.Concat(nuevasPublicaciones);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error cargando m√°s publicaciones: {ex.Message}");
            paginaActual--; // Revertir si hay error
        }
        finally
        {
            cargandoMas = false;
            StateHasChanged();
        }
    }

    private void MostrarFormularioPublicacion()
    {
        nuevaPublicacion = new CrearPublicacionDto();
        mostrarFormulario = true;
        StateHasChanged();
    }

    private void CancelarPublicacion()
    {
        mostrarFormulario = false;
        nuevaPublicacion = new CrearPublicacionDto();
        StateHasChanged();
    }

    private async Task CrearPublicacion()
    {
        publicando = true;
        try
        {
            // TODO: Obtener ID de usuario autenticado
            var usuarioId = 3; // Usuario de ejemplo para el MVP
            
            var publicacionId = await ForoService.CrearPublicacionAsync(nuevaPublicacion, usuarioId);
            
            // Recargar publicaciones
            paginaActual = 1;
            await CargarPublicaciones();
            
            // Ocultar formulario
            CancelarPublicacion();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error creando publicaci√≥n: {ex.Message}");
        }
        finally
        {
            publicando = false;
            StateHasChanged();
        }
    }
}

<style>
    .category-card {
        transition: all 0.3s ease;
        border: 2px solid transparent;
    }
    
    .category-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        border-color: #007bff !important;
    }
    
    .category-card.border-primary {
        border-color: #007bff !important;
        background-color: rgba(0,123,255,0.05);
    }
    
    .btn-outline-success.btn-sm,
    .btn-outline-danger.btn-sm {
        font-size: 0.75rem;
        border-width: 1px;
    }
    
    .btn-outline-success.btn-sm:hover {
        background-color: #28a745;
        border-color: #28a745;
    }
    
    .btn-outline-danger.btn-sm:hover {
        background-color: #dc3545;
        border-color: #dc3545;
    }
</style>